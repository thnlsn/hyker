/* class selector instal of default header element */
.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      /* Direction of the gradient */ rgba(126, 213, 111, 0.8),
      rgba(39, 180, 133, 0.8)
    ),
    url(../images/hero.jpg); /* Specified 2 background-image properties. First gradient, then image */
  background-size: cover; /* Background will always fit within the element */
  background-position: top; /* The top of the background image will always stay at the top of the container and crop out the bottom */
  clip-path: polygon(
    0 0,
    100% 0,
    100% 75vh,
    0 100%
  ); /* Defines corners of the element from top left going clockwise */
  position: relative;
}

.logo-box {
  position: absolute; /* Positioned absolutely based on the top left corner of its parent element (.header) */
  top: 40px; /* 40px away from the top of the parent element (.header) */
  left: 40px; /* 40px away from the left side of the parent element (.header) */
}

.logo {
  height: 35px;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  backface-visibility: hidden;
}

.heading-primary-main {
  display: block; /* Span elements are inline by default, so making it block will allow for a main title and subtitle */
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out; /* (#400???) Research this property more later */

  /*   
  animation-delay: 1s;
  animation-iteration-count: 3; 
  */
}

.heading-primary-sub {
  display: block; /* Displayed as block to show underneath the main title */
  font-size: 20px;
  font-weight: 600;
  letter-spacing: 17.4px;

  animation: moveInRight 1s ease-out;
}

.text-box {
  position: absolute;
  top: 40%; /* The top side of the box will be 40% away from the top side of the parent (.element) 40 not 50 because the wedge on the bottom makes it look off center*/
  left: 50%; /* The left side of the box will be 50% away from the left side of the parent (.element) */
  transform: translate(
    -50%,
    -50%
  ); /* The box will be shifted half it's width to the left and up, to allow for true centering */
}

/* link and visited are pseudo-classes, so we write the style for these specific states of the anchor element */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
}

.btn-white {
  background-color: #fff;
  color: #777;
  padding: 15px 40px;
  display: inline-block; /* This forces the block model to work and not allow the padding to overlap the above elements (a tags are inline by default) */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(
      -100px
    ); /* At the start of the animation, the element should be 100px shifted to the left */
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(
      100px
    ); /* At the start of the animation, the element should be 100px shifted to the right */
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
