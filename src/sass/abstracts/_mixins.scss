// Mixins are reusable pieces of code that can be included in other css

@mixin clearfix {
  // & will translate to whatever css selector we are within when we call the mixin then it will add ::after to that
  &::after {
    // Set content property otherwise pseudo elements will not appear on the page, it is empty because we dont actually want to see it
    content: '';
    // display: table is simply the standard for a clearfix hack
    display: table;
    // We float both to make this mixin more reuseable, so it will clear float right AND left, so it will be useful for both scenarios
    clear: both;
  }
}

// This mixin takes in arguments and will result in text with a gradient coloring
@mixin text-gradient($direction, $colorOne, $colorTwo) {
  background-image: linear-gradient($direction, $colorOne, $colorTwo);
  background-clip: text;
  color: transparent;
}

@mixin absolute-center($top: 50%, $left: 50%) {
  position: absolute;
  top: $top;
  left: $left;
  transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER

// Desktop-first approach

// 0 - 600px: ------------- Phone
// 600 - 900px: ----------- Tablet portrait
// 900 - 1200px: ---------- Tablet landscape
// [1200 - 1800] is where our default styles apply
// 1800 - ∞px: ----- Big desktop

// $breakpoint argument choices:
// - phone
// - tab-port
// - tab-land
// - big-desktop

// ORDER OF WRITING MEDIA QUERIES:
// Base + typography ▶ general layout (header, footer, etc.) + grid ▶ page layout (more specific) ▶ components

// em and rems are NOT affected by our root (html element 62.5%) font-size setting, which means 1rem in a media query is affected only by browser default (16px), but if user changes it, our queries will adapt (which is good)
// 1em = 16px: We use em because rem does not always work as intended in all browsers
// em has been studied and determined to be the best for media queries, since we still want our breakpoints to adjust to the users default, otherwise the whole pages rem will scale without out media queries kicking in (if they were in px units)
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    // Smaller than 600px (600/16)
    @media (max-width: 37.5em) {
      @content;
    }
  }

  @if $breakpoint == tab-port {
    // Smaller than 900px (900/16)
    @media (max-width: 56.25em) {
      @content;
    }
  }

  @if $breakpoint == tab-land {
    // Smaller than 1200px (1200/16)
    @media (max-width: 75em) {
      @content;
    }
  }

  @if $breakpoint == big-desktop {
    // Larger than 1800px (1800/16)
    @media (min-width: 112.5em) {
      @content;
    }
  }

  @if $breakpoint == tall {
    // Larger than 1036px tall (1036/16)
    @media (min-height: 64.75em) {
      @content;
    }
  }
}

/* @mixin respond-phone {
  @media (max-width: 600px) {
    @content;
  }
} */
