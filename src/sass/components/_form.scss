.form {
  &__group {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit; // font-family does not inherit by default on form elements so we have to do it manually (we do this instead of hard setting a font because it makes it easier to edit the site later)
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;

    transition: all 0.3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;

      &:invalid {
        // Only on a focused element, should this apply (and only when it is invalid)
        border-bottom: 3px solid $color-secondary-dark;
      }
    }

    &::placeholder,
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;

    transition: all 0.4s;
  }

  // + is the adjacent sibling selector (the adjacent sibling is the one immidiately after (NOT BEFORE))
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  // RADIO GROUP AND BUTTONS
  &__radio-group {
    width: 50%; // *** May need to decrease this
    display: inline-block; // so that they will display side by side with 50& of each side
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative; // XCZ
    padding-left: 4rem; // To give space to the custon button
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block; // The above declarations only work on block elements

    position: absolute; // XCZ
    left: 0;
    top: -0.4rem;

    &::after {
      content: ''; // Always have to set the content of a pseudo-element
      display: block; // Always have to set the content of a pseudo-element
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;

      position: absolute; // This will be in relation to the last absolute position because it works the same as relative // XCZ
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0; // This is for initial state (since it will be unselected)

      transition: all 0.2s;
    }
  }

  &__radio-input:checked + &__radio-label &__radio-button::after {
    opacity: 1; //
  }
}
