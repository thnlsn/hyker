.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem; // 1 rem larger than the size of the __background, because we want that to be hidden under the button and only expand when clicked
    width: 7rem; // 1 rem larger than the size of the __background, because we want that to be hidden under the button and only expand when clicked
    position: fixed;
    top: 6rem; // Less far from the edges than the background because it is a rem larger
    right: 6rem; // Less far from the edges than the background because it is a rem larger
    border-radius: 50%; // Circle shape
    z-index: 300;
    box-shadow: 0 1rem 3rem rgba($color-black, 0.1);

    text-align: center; // The burger icons are spans, which are inline so this works to center
    cursor: pointer;
  }

  &__background {
    height: 6rem; // Same height/width because circle
    width: 6rem; // Same height/width because circle
    border-radius: 50%; // Circle shape
    position: fixed; // Similar to absolute but it stays on the screen in the same spot no matter where you scroll
    top: 6.5rem; // .5 because it is smaller than the button, so it has to be further from the edges to be centered inside it
    right: 6.5rem; // .5 because it is smaller than the button, so it has to be further from the edges to be centered inside it
    background-image: radial-gradient(
      $color-primary-light,
      $color-primary-dark
    );
    z-index: 100;

    transition: all 0.8s cubic-bezier(0.83, 0, 0.17, 1); // For the scaling up of the radial background
  }

  &__nav {
    // Giant container spanning the entire viewport
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 200;

    width: 100%;

    opacity: 0; // This is so that the menu is not visible by default, but only when we press the menu button
    /*     width: 0; // The reason we hide it with width rather than just opacity is because the buttons would still be interactable */
    transform: translateX(
      -100vw
    ); // This avoids the issue of setting width to 0 as a way of hiding in that you wont see the list squished for a split second as it closes

    transition: all 0.8s cubic-bezier(0.79, -0.35, 0.16, 1.36); // For the showing of the menu when the button is clicked
  }

  &__list {
    @include absolute-center;
    list-style: none;
    text-align: center;

    width: 100%;
  }

  &__item {
    margin: 1rem;

    transition: all 0.2s;

    &:hover {
      background-size: 200;
    }
  }
  &__link {
    &:link,
    &:visited {
      display: inline-block;
      font-size: 3rem;
      font-weight: 300;
      padding: 1rem 2rem;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;

      background-image: linear-gradient(
        120deg,
        transparent 0%,
        transparent 50%,
        $color-white 50%
      );

      background-size: 240%; // #### 220%

      transition: all 0.4s;
    }

    &:hover,
    &:active {
      background-position: 100%; // This is shifting the white background back to its original position (since its initial state is )
      color: $color-primary;
      transform: translateX(1rem);
    }
  }

  &__checkbox:checked ~ &__background {
    transform: scale(100);
  }

  &__checkbox:checked ~ &__nav {
    opacity: 1;
    transform: translateX(
      0
    ); // It was translated -100vw by default, so we set it back to normal
    /*     width: 100%; */
  }

  // MENU BUTTON ICON
  &__icon {
    position: relative;
    margin-top: 3.4rem;

    // Targetting the span, as well as it's before and after pseudo-elements
    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-grey-dark-3;
      display: inline-block; // So these width/height changes can effect this
      transition: all 0.2s;
    }

    &::before,
    &::after {
      content: ''; // Neccesary for pseudo-elements to appear visually
      position: absolute;
      left: 0;
    }

    &::before {
      top: -0.8rem;
    }

    &::after {
      top: 0.8rem;
    }
  }

  &__button:hover &__icon {
    &::before {
      top: -1rem;
    }

    &::after {
      top: 1rem;
    }
  }

  // For the rotation effect of the burger menu (+ is usable because it is a direct sibling)
  &__checkbox:checked + &__button &__icon {
    background-color: transparent;
    &::before,
    &::after {
      top: 0; // Both their top values were place slightly above and below the original span, so for it to be centered they have to be at the exact same location again
    }

    &::before {
      transform: rotate(135deg);
    }

    &::after {
      transform: rotate(-135deg);
    }
  }
}
