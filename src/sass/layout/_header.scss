// This file is a partial (it was named leading with a _) which tells Sass that this should not be generated into a CSS file, and instead included in one by importing

// class selector instal of default header element
.header {
  height: 85vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../images/hero-small.jpg); // Specified 2 background-image properties. First gradient, then image
  background-size: cover; // Background will always fit within the element
  background-position: top; // The top of the background image will always stay at the top of the container and crop out the bottom
  clip-path: polygon(
    0 0,
    100% 0,
    100% 75vh,
    0 100%
  ); // Defines corners of the element from top left going clockwise

  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    // Prefixed versions always go first
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    // Defines corners of the element from top left going clockwise
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh; // Only want this if polygon is supported, because if it isnt it will be a straight edge at the bottom and users might not know the page continues, so we make it shorter to let them know
  }

  // 192dpi is simply a commonly used resolution breakpoint to signify a high resolution screen (it is a dpi of Apple Retina displays)
  // If the resolution is high AND viewport greater than 600px width (600/16 = 37.5em), use the high res version OR, if the viewport is huge (125em/2000px) use the high res
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
    only screen and (min-width: 125em) {
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)
      ),
      url(../images/hero.jpg);
  } // -webkit-min-device-pixel-ratio is here specifically for safari where min-resolution does not work (min-width: 125em)

  @include respond(phone) {
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  position: relative;

  &__logo-box {
    position: absolute; // Positioned absolutely based on the top left corner of its parent element (.header)
    top: 4rem; // 40px away from the top of the parent element (.header)
    left: 4rem; // 40px away from the left side of the parent element (.header)
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    // The top side of the box will be 40% away from the top side of the parent (.element) 40 not 50 because the wedge on the bottom makes it look off center
    // The left side of the box will be 50% away from the left side of the parent (.element)
    @include absolute-center(
      40%,
      50%
    ); // The box will be shifted half it's width to the left and up, to allow for true centering
    text-align: center; // This centers the text AND the button! This is because the button (btn-white) is inline-block, so it acts like text (inline)
  }
}
